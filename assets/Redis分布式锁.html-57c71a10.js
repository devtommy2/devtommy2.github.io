const e=JSON.parse('{"key":"v-1910cfcf","path":"/posts/%E9%9D%A2%E8%AF%95%E9%A2%98/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html","title":"Redis分布式锁","lang":"zh-CN","frontmatter":{"date":"2023-11-14T00:00:00.000Z","category":["Redis"],"description":"Redis分布式锁 什么是分布式锁？ 分布式锁，是控制分布式系统之间同步访问共享资源的一种方式。在分布式系统中，常常需要协调他们的动作。如果不同的系统或是同一个系统的不同主机之间共享了一个或一组资源，那么访问这些资源的时候，往往需要互斥来防止彼此干扰来保证一致性，在这种情况下，便需要使用到分布式锁。 基于Redis 实现一个简单的分布式锁 加锁，使用setNX lockKey UniqueValue上锁，只有当前的lockKey在Redis中不存在时才能put成功，这样就能保证同一个 lockKey只被添加一次。","head":[["meta",{"property":"og:url","content":"https://example.com/posts/%E9%9D%A2%E8%AF%95%E9%A2%98/Redis%E5%88%86%E5%B8%83%E5%BC%8F%E9%94%81.html"}],["meta",{"property":"og:site_name","content":"TOMMY"}],["meta",{"property":"og:title","content":"Redis分布式锁"}],["meta",{"property":"og:description","content":"Redis分布式锁 什么是分布式锁？ 分布式锁，是控制分布式系统之间同步访问共享资源的一种方式。在分布式系统中，常常需要协调他们的动作。如果不同的系统或是同一个系统的不同主机之间共享了一个或一组资源，那么访问这些资源的时候，往往需要互斥来防止彼此干扰来保证一致性，在这种情况下，便需要使用到分布式锁。 基于Redis 实现一个简单的分布式锁 加锁，使用setNX lockKey UniqueValue上锁，只有当前的lockKey在Redis中不存在时才能put成功，这样就能保证同一个 lockKey只被添加一次。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-15T10:02:18.000Z"}],["meta",{"property":"article:author","content":"tommy"}],["meta",{"property":"article:published_time","content":"2023-11-14T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2023-12-15T10:02:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Redis分布式锁\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2023-11-14T00:00:00.000Z\\",\\"dateModified\\":\\"2023-12-15T10:02:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tommy\\",\\"url\\":\\"https://example.com\\"}]}"]]},"headers":[{"level":2,"title":"什么是分布式锁？","slug":"什么是分布式锁","link":"#什么是分布式锁","children":[]},{"level":2,"title":"基于Redis 实现一个简单的分布式锁","slug":"基于redis-实现一个简单的分布式锁","link":"#基于redis-实现一个简单的分布式锁","children":[]},{"level":2,"title":"基于Redis实现一个带有超时时间的分布式锁","slug":"基于redis实现一个带有超时时间的分布式锁","link":"#基于redis实现一个带有超时时间的分布式锁","children":[]},{"level":2,"title":"如何实现锁的续期？","slug":"如何实现锁的续期","link":"#如何实现锁的续期","children":[]},{"level":2,"title":"Redis实现分布式锁的文章","slug":"redis实现分布式锁的文章","link":"#redis实现分布式锁的文章","children":[]}],"git":{"createdTime":1702634538000,"updatedTime":1702634538000,"contributors":[{"name":"zazhang","email":"zazhang@aliyun.com","commits":1}]},"readingTime":{"minutes":2.94,"words":881},"filePathRelative":"posts/面试题/Redis分布式锁.md","localizedDate":"2023年11月14日","excerpt":"<h1> Redis分布式锁</h1>\\n<h2> 什么是分布式锁？</h2>\\n<p><strong>分布式锁</strong>，是控制分布式系统之间同步访问共享资源的一种方式。在分布式系统中，常常需要协调他们的动作。如果不同的系统或是同一个系统的不同主机之间共享了一个或一组资源，那么访问这些资源的时候，往往需要互斥来防止彼此干扰来保证一致性，在这种情况下，便需要使用到分布式锁。</p>\\n<h2> 基于Redis 实现一个简单的分布式锁</h2>\\n<p>加锁，使用<code>setNX lockKey UniqueValue</code>上锁，只有当前的lockKey在Redis中不存在时才能put成功，这样就能保证同一个 lockKey只被添加一次。</p>","autoDesc":true}');export{e as data};
