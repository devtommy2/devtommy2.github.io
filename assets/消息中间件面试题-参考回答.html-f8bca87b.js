const t=JSON.parse('{"key":"v-2362207a","path":"/posts/%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8F%82%E8%80%83%E5%9B%9E%E7%AD%94.html","title":"","lang":"zh-CN","frontmatter":{"description":"消息中间件面试题-参考回答 面试官：RabbitMQ-如何保证消息不丢失 候选人： 嗯！我们当时MYSQL和Redis的数据双写一致性就是采用RabbitMQ实现同步的，这里面就要求了消息的高可用性，我们要保证消息的不丢失。主要从三个层面考虑 第一个是开启生产者确认机制，确保生产者的消息能到达队列，如果报错可以先记录到日志中，再去修复数据 第二个是开启持久化功能，确保消息未消费前在队列中不会丢失，其中的交换机、队列、和消息都要做持久化 第三个是开启消费者确认机制为auto，由spring确认消息处理成功后完成ack，当然也需要设置一定的重试次数，我们当时设置了3次，如果重试3次还没有收到消息，就将失败后的消息投递到异常交换机，交由人工处理","head":[["meta",{"property":"og:url","content":"https://example.com/posts/%E9%9D%A2%E8%AF%95%E9%A2%98/%E6%B6%88%E6%81%AF%E4%B8%AD%E9%97%B4%E4%BB%B6%E9%9D%A2%E8%AF%95%E9%A2%98-%E5%8F%82%E8%80%83%E5%9B%9E%E7%AD%94.html"}],["meta",{"property":"og:site_name","content":"TOMMY"}],["meta",{"property":"og:description","content":"消息中间件面试题-参考回答 面试官：RabbitMQ-如何保证消息不丢失 候选人： 嗯！我们当时MYSQL和Redis的数据双写一致性就是采用RabbitMQ实现同步的，这里面就要求了消息的高可用性，我们要保证消息的不丢失。主要从三个层面考虑 第一个是开启生产者确认机制，确保生产者的消息能到达队列，如果报错可以先记录到日志中，再去修复数据 第二个是开启持久化功能，确保消息未消费前在队列中不会丢失，其中的交换机、队列、和消息都要做持久化 第三个是开启消费者确认机制为auto，由spring确认消息处理成功后完成ack，当然也需要设置一定的重试次数，我们当时设置了3次，如果重试3次还没有收到消息，就将失败后的消息投递到异常交换机，交由人工处理"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2023-12-15T10:02:18.000Z"}],["meta",{"property":"article:author","content":"tommy"}],["meta",{"property":"article:modified_time","content":"2023-12-15T10:02:18.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-12-15T10:02:18.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"tommy\\",\\"url\\":\\"https://example.com\\"}]}"]]},"headers":[{"level":2,"title":"消息中间件面试题-参考回答","slug":"消息中间件面试题-参考回答","link":"#消息中间件面试题-参考回答","children":[]}],"git":{"createdTime":1702634538000,"updatedTime":1702634538000,"contributors":[{"name":"zazhang","email":"zazhang@aliyun.com","commits":1}]},"readingTime":{"minutes":9.65,"words":2896},"filePathRelative":"posts/面试题/消息中间件面试题-参考回答.md","localizedDate":"2023年12月15日","excerpt":"<h2> 消息中间件面试题-参考回答</h2>\\n<p><strong>面试官</strong>：RabbitMQ-如何保证消息不丢失</p>\\n<p><strong>候选人</strong>：</p>\\n<p>嗯！我们当时MYSQL和Redis的数据双写一致性就是采用RabbitMQ实现同步的，这里面就要求了消息的高可用性，我们要保证消息的不丢失。主要从三个层面考虑</p>\\n<p>第一个是开启生产者确认机制，确保生产者的消息能到达队列，如果报错可以先记录到日志中，再去修复数据</p>\\n<p>第二个是开启持久化功能，确保消息未消费前在队列中不会丢失，其中的交换机、队列、和消息都要做持久化</p>\\n<p>第三个是开启消费者确认机制为auto，由spring确认消息处理成功后完成ack，当然也需要设置一定的重试次数，我们当时设置了3次，如果重试3次还没有收到消息，就将失败后的消息投递到异常交换机，交由人工处理</p>","autoDesc":true}');export{t as data};
